#include "CubeRoot.h"
#include <stdint.h>
#include <limits>

static const double cube_root_coeffs[256-32+1][4] = {
	{1.8077658823856388393e-06, -1.0845992670818547620e-04, 1.0416657313104387209e-02, 1.0000000002913671526e+00},
	{1.6674057752340565906e-06, -1.0304028450758183019e-04, 1.0205143199683979274e-02, 1.0103100054162248433e+00},
	{1.5416051590502298614e-06, -9.8041247077881150084e-05, 1.0004049112247219433e-02, 1.0204137757133231457e+00},
	{1.4284949310098699410e-06, -9.3419209019807329729e-05, 9.8125772857366993368e-03, 1.0303213251628173808e+00},
	{1.3264895332328131086e-06, -8.9136159383241774759e-05, 9.6300115940981863977e-03, 1.0400419117161987526e+00},
	{1.2342376709845703832e-06, -8.5158833567479418677e-05, 9.4557072058415372190e-03, 1.0495841136243737601e+00},
	{1.1505826302235721575e-06, -8.1458012516165707721e-05, 9.2890817891592911137e-03, 1.0589558962201270909e+00},
	{1.0745301333064152077e-06, -7.8007940539036722707e-05, 9.1296080005530393792e-03, 1.0681646705668295105e+00},
	{1.0052221533473937539e-06, -7.4785839243016711902e-05, 8.9768070421303008261e-03, 1.0772173451458071369e+00},
	{9.4191546814105028654e-07, -7.1771499769615842946e-05, 8.8302431130762720768e-03, 1.0861203715608942488e+00},
	{8.8396400631993854068e-07, -6.8946939175131043620e-05, 8.6895186127877513393e-03, 1.0948797850807743259e+00},
	{8.3080424484420046012e-07, -6.6296109619024771314e-05, 8.5542699786674506607e-03, 1.1035012407104241028e+00},
	{7.8194307480727137424e-07, -6.3804651238787412357e-05, 8.4241640620432416825e-03, 1.1119900453765587667e+00},
	{7.3694767410558818685e-07, -6.1459681331289044647e-05, 8.2988949621864930434e-03, 1.1203511867239925870e+00},
	{6.9543701970648887144e-07, -5.9249613839425627388e-05, 8.1781812517910841553e-03, 1.1285893589467048681e+00},
	{6.5707474566145925233e-07, -5.7164004240429822134e-05, 8.0617635381844653109e-03, 1.1367089860164147908e+00},
	{6.2156311056097554182e-07, -5.5193415810533911483e-05, 7.9494023134750839421e-03, 1.1447142426203356091e+00},
	{5.8863788348723765612e-07, -5.3329303947083638070e-05, 7.8408760541878626260e-03, 1.1526090730767792891e+00},
	{5.5806399346068993193e-07, -5.1563915800096233070e-05, 7.7359795370089082939e-03, 1.1603972084609619486e+00},
	{5.2963181599431099092e-07, -4.9890202928758092056e-05, 7.6345223422952090270e-03, 1.1680821821425706464e+00},
	{5.0315399326693140331e-07, -4.8301745076332564606e-05, 7.5363275211978155918e-03, 1.1756673439104707857e+00},
	{4.7846270283107587086e-07, -4.6792683466482907920e-05, 7.4412304057518696698e-03, 1.1831558728375826117e+00},
	{4.5540730462886694639e-07, -4.5357662278531826598e-05, 7.3490775442274693802e-03, 1.1905507890198188115e+00},
	{4.3385230813544617158e-07, -4.3991777169272458330e-05, 7.2597257465111392216e-03, 1.1978549643065461439e+00},
	{4.1367561125513320223e-07, -4.2690529883019379142e-05, 7.1730412263791175007e-03, 1.2050711321258738007e+00},
	{3.9476697060897984399e-07, -4.1449788136337336925e-05, 7.0888988292961930757e-03, 1.2122018964958427567e+00},
	{3.7702666942576346227e-07, -4.0265750084667407472e-05, 7.0071813358806829888e-03, 1.2192497403020017277e+00},
	{3.6036435466014640068e-07, -3.9134912779189880421e-05, 6.9277788324610045309e-03, 1.2262170329126467205e+00},
	{3.4469801943258911967e-07, -3.8054044107193841183e-05, 6.8505881412480621948e-03, 1.2331060371950002263e+00},
	{3.2995311059167545494e-07, -3.7020157780778251123e-05, 6.7755123035898798256e-03, 1.2399189159886023770e+00},
	{3.1606174428160659786e-07, -3.6030490999175473132e-05, 6.7024601105850224042e-03, 1.2466577380860779378e+00},
	{3.0296201496887028002e-07, -3.5082484461231555324e-05, 6.6313456760297775916e-03, 1.2533244837660677540e+00},
	{2.9059738553367926106e-07, -3.4173764448126795195e-05, 6.5620880472775948086e-03, 1.2599210499184059220e+00},
	{2.7891614783748387976e-07, -3.3302126733529480629e-05, 6.4946108501121773207e-03, 1.2664492547974626202e+00},
	{2.6787094469760697727e-07, -3.2465522110081211204e-05, 6.4288419641896519738e-03, 1.2729108424359103502e+00},
	{2.5741834548263616062e-07, -3.1662043348268337033e-05, 6.3647132260004016940e-03, 1.2793074867479290457e+00},
	{2.4751846862752646025e-07, -3.0889913427050999181e-05, 6.3021601566458111329e-03, 1.2856407953479882522e+00},
	{2.3813464528813502948e-07, -3.0147474895689356782e-05, 6.2411217120264461319e-03, 1.2919123131087990597e+00},
	{2.2923311913802786370e-07, -2.9433180243517777805e-05, 6.1815400533020660109e-03, 1.2981235254797554024e+00},
	{2.2078277797806474624e-07, -2.8745583169384561370e-05, 6.1233603357154584718e-03, 1.3042758615851659521e+00},
	{2.1275491339984405045e-07, -2.8083330655442481584e-05, 6.0665305140757330368e-03, 1.3103706971197712772e+00},
	{2.0512300523280848267e-07, -2.7445155761234387749e-05, 6.0110011633761244523e-03, 1.3164093570574311176e+00},
	{1.9786252792434856068e-07, -2.6829871063814031841e-05, 5.9567253131797073817e-03, 1.3223931181874188923e+00},
	{1.9095077636316697271e-07, -2.6236362678181470451e-05, 5.9036582945464445224e-03, 1.3283232114914687028e+00},
	{1.8436670896731887718e-07, -2.5663584799770950583e-05, 5.8517575983989952512e-03, 1.3342008243735550277e+00},
	{1.7809080612713714472e-07, -2.5110554717255787578e-05, 5.8009827443347280682e-03, 1.3400271027533376955e+00},
	{1.7210494232591166897e-07, -2.4576348249656254522e-05, 5.7512951589891682033e-03, 1.3458031530332668080e+00},
	{1.6639227046296581422e-07, -2.4060095566761247618e-05, 5.7026580631431142074e-03, 1.3515300439484825290e+00},
	{1.6093711707909102118e-07, -2.3560977356294821511e-05, 5.6550363668432445871e-03, 1.3572088083078897025e+00},
	{1.5572488733690861227e-07, -2.3078221305153871220e-05, 5.6083965718752926480e-03, 1.3628404446340789402e+00},
	{1.5074197874180706369e-07, -2.2611098865481262768e-05, 5.5627066809907704456e-03, 1.3684259187091447618e+00},
	{1.4597570270535222171e-07, -2.2158922279378207585e-05, 5.5179361133437018067e-03, 1.3739661650328787168e+00},
	{1.4141421315478939811e-07, -2.1721041838750658812e-05, 5.4740556256434903803e-03, 1.3794620881992958328e+00},
	{1.3704644148141147342e-07, -2.1296843359171080553e-05, 5.4310372385747282195e-03, 1.3849145641969824450e+00},
	{1.3286203719883578707e-07, -2.0885745848756142999e-05, 5.3888541680748303087e-03, 1.3903244416383258031e+00},
	{1.2885131375105081726e-07, -2.0487199354945734417e-05, 5.3474807610965355634e-03, 1.3956925429222919455e+00},
	{1.2500519897069655828e-07, -2.0100682973747293605e-05, 5.3068924355148599722e-03, 1.4010196653350655005e+00},
	{1.2131518974149073166e-07, -1.9725703007506553108e-05, 5.2670656238674538191e-03, 1.4063065820925384486e+00},
	{1.1777331046591917265e-07, -1.9361791258602628483e-05, 5.2279777206438882847e-03, 1.4115540433283344512e+00},
	{1.1437207498106371235e-07, -1.9008503447660830225e-05, 5.1896070328633792795e-03, 1.4167627770307893442e+00},
	{1.1110445160242322081e-07, -1.8665417745947011148e-05, 5.1519327337022314747e-03, 1.4219334899320510424e+00},
	{1.0796383100838572764e-07, -1.8332133412566645420e-05, 5.1149348189519720093e-03, 1.4270668683522413911e+00},
	{1.0494399670714152720e-07, -1.8008269527953135806e-05, 5.0785940661070717167e-03, 1.4321635790014046741e+00},
	{1.0203909785373419467e-07, -1.7693463815903772942e-05, 5.0428919958973748502e-03, 1.4372242697417834112e+00},
	{9.9243624208014825398e-08, -1.7387371547117990822e-05, 5.0078108360951867004e-03, 1.4422495703127751199e+00},
	{9.6552383044830942181e-08, -1.7089664517819807584e-05, 4.9733334874403883202e-03, 1.4472400930207685033e+00},
	{9.3960477846139498363e-08, -1.6800030097611755460e-05, 4.9394434915392762542e-03, 1.4521964333959036519e+00},
	{9.1463288621140472473e-08, -1.6518170341218202011e-05, 4.9061250006039594865e-03, 1.4571191708176605140e+00},
	{8.9056453715207173808e-08, -1.6243801159237272443e-05, 4.8733627489094284019e-03, 1.4620088691110568746e+00},
	{8.6735852981539075116e-08, -1.5976651543437810944e-05, 4.8411420258547060644e-03, 1.4668660771151125211e+00},
	{8.4497592201256294486e-08, -1.5716462842515941208e-05, 4.8094486505230868087e-03, 1.4716913292251354584e+00},
	{8.2337988648241450115e-08, -1.5462988084568177405e-05, 4.7782689476442586490e-03, 1.4764851459102730225e+00},
	{8.0253557704549967975e-08, -1.5215991342848970771e-05, 4.7475897248683059798e-03, 1.4812480342076921325e+00},
	{7.8241000440771043265e-08, -1.4975247141662913404e-05, 4.7173982512681679816e-03, 1.4859804881946518940e+00},
	{7.6297192083431031261e-08, -1.4740539899498434571e-05, 4.6876822369931597789e-03, 1.4906829894396604885e+00},
	{7.4419171298482669070e-08, -1.4511663406743426351e-05, 4.6584298140017344619e-03, 1.4953560074338332342e+00},
	{7.2604130226196046987e-08, -1.4288420335535916936e-05, 4.6296295178067537607e-03, 1.5000000000034912073e+00},
	{7.0849405208434322097e-08, -1.4070621779496877074e-05, 4.6012702701712544784e-03, 1.5046154137049887467e+00},
	{6.9152468154420405814e-08, -1.3858086821269125958e-05, 4.5733413626970059740e-03, 1.5092026842026864397e+00},
	{6.7510918495738719831e-08, -1.3650642125947894700e-05, 4.5458324412521620636e-03, 1.5137622366309348987e+00},
	{6.5922475685516352741e-08, -1.3448121558636300996e-05, 4.5187334911879883242e-03, 1.5182944859408882277e+00},
	{6.4384972200537493585e-08, -1.3250365824494019179e-05, 4.4920348232980319633e-03, 1.5227998372329054622e+00},
	{6.2896347008501534986e-08, -1.3057222129771142415e-05, 4.4657270604762672878e-03, 1.5272786860752671778e+00},
	{6.1454639465774938225e-08, -1.2868543862432488869e-05, 4.4398011250336207739e-03, 1.5317314188098798411e+00},
	{6.0057983613841612474e-08, -1.2684190291081512598e-05, 4.4142482266349963166e-03, 1.5361584128456129417e+00},
	{5.8704602845253662666e-08, -1.2504026280988320252e-05, 4.3890598508213862772e-03, 1.5405600369398657623e+00},
	{5.7392804912249177203e-08, -1.2327922026113788094e-05, 4.3642277480839680726e-03, 1.5449366514689375496e+00},
	{5.6120977253359392490e-08, -1.2155752796102297882e-05, 4.3397439234592154189e-03, 1.5492886086877313279e+00},
	{5.4887582615293336204e-08, -1.1987398697289534103e-05, 4.3156006266160439402e-03, 1.5536162529793053899e+00},
	{5.3691154949182609644e-08, -1.1822744446839928862e-05, 4.2917903424078418517e-03, 1.5579199210947429766e+00},
	{5.2530295561908269404e-08, -1.1661679159191029625e-05, 4.2683057818639399267e-03, 1.5621999423837977794e+00},
	{5.1403669504730672838e-08, -1.1504096144039895346e-05, 4.2451398735966856465e-03, 1.5664566390167389276e+00},
	{5.0310002182813955501e-08, -1.1349892715159899808e-05, 4.2222857556017323252e-03, 1.5706903261978042430e+00},
	{4.9248076170492674032e-08, -1.1198970009385550550e-05, 4.1997367674305469826e-03, 1.5749013123706383510e+00},
	{4.8216728218277922417e-08, -1.1051232815148363209e-05, 4.1774864427154244362e-03, 1.5790898994160829094e+00},
	{4.7214846438655308345e-08, -1.0906589409988781282e-05, 4.1555285020284703570e-03, 1.5832563828426604591e+00},
	{4.6241367658694593865e-08, -1.0764951406508021953e-05, 4.1338568460571366650e-03, 1.5874010519700763044e+00},
	{4.5295274928379328916e-08, -1.0626233606259576786e-05, 4.1124655490799317398e-03, 1.5915241901060475094e+00},
	{4.4375595174381233528e-08, -1.0490353861113420035e-05, 4.0913488527268941641e-03, 1.5956260747167503311e+00},
	{4.3481396989754582165e-08, -1.0357232941656721242e-05, 4.0705011600103086292e-03, 1.5997069775911674228e+00},
	{4.2611788550716268200e-08, -1.0226794412223513912e-05, 4.0499170296120169318e-03, 1.6037671649995905998e+00},
	{4.1765915652312951165e-08, -1.0098964512172140190e-05, 4.0295911704144220591e-03, 1.6078068978465378525e+00},
	{4.0942959855362399514e-08, -9.9736720430540028225e-06, 4.0095184362630665806e-03, 1.6118264318183161965e+00},
	{4.0142136737595595703e-08, -9.8508482613398730621e-06, 3.9896938209493275004e-03, 1.6158260175254579583e+00},
	{3.9362694242424325064e-08, -9.7304267763913027296e-06, 3.9701124534024176405e-03, 1.6198059006402456550e+00},
	{3.8603911119218273531e-08, -9.6123434533843380611e-06, 3.9507695930805081241e-03, 1.6237663220295301958e+00},
	{3.7865095449399956635e-08, -9.4965363209111305567e-06, 3.9316606255513355736e-03, 1.6277075178830340274e+00},
	{3.7145583253057812988e-08, -9.3829454830020484569e-06, 3.9127810582531858535e-03, 1.6316297198373264088e+00},
	{3.6444737171140385141e-08, -9.2715130353268471858e-06, 3.8941265164276757209e-03, 1.6355331550956475617e+00},
	{3.5761945218629644574e-08, -9.1621829853482022533e-06, 3.8756927392161744095e-03, 1.6394180465437460104e+00},
	{3.5096619604401922082e-08, -9.0549011762147621756e-06, 3.8574755759121972382e-03, 1.6432846128618918691e+00},
	{3.4448195613772326886e-08, -8.9496152141937064436e-06, 3.8394709823624736944e-03, 1.6471330686332181781e+00},
	{3.3816130549984843684e-08, -8.8462743994548248213e-06, 3.8216750175098066107e-03, 1.6509636244485337286e+00},
	{3.3199902731157193677e-08, -8.7448296600293371178e-06, 3.8040838400711959703e-03, 1.6547764870077472654e+00},
	{3.2599010539418548936e-08, -8.6452334887771385116e-06, 3.7866937053450434869e-03, 1.6585718592180347386e+00},
	{3.2012971519190801347e-08, -8.5474398832059370474e-06, 3.7695009621415711230e-03, 1.6623499402888757270e+00},
	{3.1441321521761472530e-08, -8.4514042879949114275e-06, 3.7525020498309085044e-03, 1.6661109258240807129e+00},
	{3.0883613893479608016e-08, -8.3570835400840332957e-06, 3.7356934955035678639e-03, 1.6698550079109211186e+00},
	{3.0339418705076649637e-08, -8.2644358161982433257e-06, 3.7190719112383105113e-03, 1.6735823752064751258e+00},
	{2.9808322019772549533e-08, -8.1734205826831277071e-06, 3.7026339914726603617e-03, 1.6772932130212931945e+00},
	{2.9289925197975183164e-08, -8.0839985475357889336e-06, 3.6863765104715512030e-03, 1.6809877034004832019e+00},
	{2.8783844236518063456e-08, -7.9961316145211354254e-06, 3.6702963198898337811e-03, 1.6846660252023111237e+00},
	{2.8289709140509521551e-08, -7.9097828392700452875e-06, 3.6543903464245713029e-03, 1.6883283541744100731e+00},
	{2.7807163325985541015e-08, -7.8249163872615464909e-06, 3.6386555895532570956e-03, 1.6919748630276842949e+00},
	{2.7335863051669449912e-08, -7.7414974935966665532e-06, 3.6230891193542789745e-03, 1.6956057215079942679e+00},
	{2.6875476878245383745e-08, -7.6594924244766463413e-06, 3.6076880744061378889e-03, 1.6992210964656990768e+00},
	{2.6425685153648977484e-08, -7.5788684403029797160e-06, 3.5924496597620875736e-03, 1.7028211519231393201e+00},
	{2.5986179522969030018e-08, -7.4995937603212706738e-06, 3.5773711449970345411e-03, 1.7064060491401282782e+00},
	{2.5556662461638101256e-08, -7.4216375287350848272e-06, 3.5624498623236834638e-03, 1.7099759466775272809e+00},
	{2.5136846830668766268e-08, -7.3449697822199455007e-06, 3.5476832047750565466e-03, 1.7135310004589678901e+00},
	{2.4726455452765764027e-08, -7.2695614187713499671e-06, 3.5330686244506533979e-03, 1.7170713638307912863e+00},
	{2.4325220708213165949e-08, -7.1953841678242083961e-06, 3.5186036308236454118e-03, 1.7205971876202625914e+00},
	{2.3932884149499991088e-08, -7.1224105615843801733e-06, 3.5042857891066218380e-03, 1.7241086201921238530e+00},
	{2.3549196133707950045e-08, -7.0506139075161086496e-06, 3.4901127186735179074e-03, 1.7276058075035380934e+00},
	{2.3173915471741393472e-08, -6.9799682619320894988e-06, 3.4760820915354690049e-03, 1.7310888931574854865e+00},
	{2.2806809093532431000e-08, -6.9104484046356488646e-06, 3.4621916308684324605e-03, 1.7345580184546602887e+00},
	{2.2447651728403529401e-08, -6.8420298145671197231e-06, 3.4484391095905234798e-03, 1.7380133224439195949e+00},
	{2.2096225599816478976e-08, -6.7746886464089536633e-06, 3.4348223489871023729e-03, 1.7414549419713338807e+00},
	{2.1752320133780014362e-08, -6.7084017081064270020e-06, 3.4213392173817339451e-03, 1.7448830117278870677e+00},
	{2.1415731680229182459e-08, -6.6431464392629575451e-06, 3.4079876288512374848e-03, 1.7482976642958680813e+00},
	{2.1086263246727954466e-08, -6.5789008903711421712e-06, 3.3947655419831060733e-03, 1.7516990301939994179e+00},
	{2.0763724243882429071e-08, -6.5156437028425473311e-06, 3.3816709586736719458e-03, 1.7550872379213433572e+00},
	{2.0447930241885825346e-08, -6.4533540898011234664e-06, 3.3687019229654458115e-03, 1.7584624140000266745e+00},
	{2.0138702737648128397e-08, -6.3920118176068643198e-06, 3.3558565199221413074e-03, 1.7618246830168211581e+00},
	{1.9835868931993158340e-08, -6.3315971880779584125e-06, 3.3431328745399564728e-03, 1.7651741676636174549e+00},
	{1.9539261516433781964e-08, -6.2720910213812342706e-06, 3.3305291506937413810e-03, 1.7685109887768275527e+00},
	{1.9248718469062416520e-08, -6.2134746395621790540e-06, 3.3180435501167482824e-03, 1.7718352653757507564e+00},
	{1.8964082859118760705e-08, -6.1557298506871849762e-06, 3.3056743114127091869e-03, 1.7751471146999362460e+00},
	{1.8685202659820047495e-08, -6.0988389335719941933e-06, 3.2934197090990434929e-03, 1.7784466522455710802e+00},
	{1.8411930569061093326e-08, -6.0427846230715706819e-06, 3.2812780526800498782e-03, 1.7817339918009296174e+00},
	{1.8144123837612150576e-08, -5.9875500959077770528e-06, 3.2692476857489800347e-03, 1.7850092454809076692e+00},
	{1.7881644104462002430e-08, -5.9331189570123887511e-06, 3.2573269851179421398e-03, 1.7882725237606751367e+00},
	{1.7624357238972261420e-08, -5.8794752263639911440e-06, 3.2455143599746274878e-03, 1.7915239355084713324e+00},
	{1.7372133189525998629e-08, -5.8266033262983527811e-06, 3.2338082510648879717e-03, 1.7947635880175680789e+00},
	{1.7124845838370311235e-08, -5.7744880692727752782e-06, 3.2222071299002402398e-03, 1.7979915870374312270e+00},
	{1.6882372862367805134e-08, -5.7231146460658537133e-06, 3.2107094979894079158e-03, 1.8012080368040996881e+00},
	{1.6644595599386491342e-08, -5.6724686143949242141e-06, 3.1993138860930457959e-03, 1.8044130400698077388e+00},
	{1.6411398920071418729e-08, -5.6225358879342758676e-06, 3.1880188535008294019e-03, 1.8076066981318739124e+00},
	{1.6182671104754193536e-08, -5.5733027257179985973e-06, 3.1768229873301227599e-03, 1.8107891108608780151e+00},
	{1.5958303725268973639e-08, -5.5247557219120467723e-06, 3.1657249018454758707e-03, 1.8139603767281460289e+00},
	{1.5738191531454930675e-08, -5.4768817959408038929e-06, 3.1547232377982180850e-03, 1.8171205928325657730e+00},
	{1.5522232342136184574e-08, -5.4296681829540952287e-06, 3.1438166617854639007e-03, 1.8202698549267524175e+00},
	{1.5310326940380617670e-08, -5.3831024246212119252e-06, 3.1330038656278546422e-03, 1.8234082574425802825e+00},
	{1.5102378972848610553e-08, -5.3371723602391165714e-06, 3.1222835657654015445e-03, 1.8265358935161035703e+00},
	{1.4898294853052153508e-08, -5.2918661181425634976e-06, 3.1116545026708057435e-03, 1.8296528550118809076e+00},
	{1.4697983668353399960e-08, -5.2471721074043981603e-06, 3.1011154402796757730e-03, 1.8327592325467219059e+00},
	{1.4501357090540142446e-08, -5.2030790098148302169e-06, 3.0906651654370584023e-03, 1.8358551155128715049e+00},
	{1.4308329289823415854e-08, -5.1595757721289382185e-06, 3.0803024873597472169e-03, 1.8389405921006496403e+00},
	{1.4118816852109981490e-08, -5.1166515985721508912e-06, 3.0700262371138398523e-03, 1.8420157493205604471e+00},
	{1.3932738699409352520e-08, -5.0742959435938811197e-06, 3.0598352671070312703e-03, 1.8450806730248865417e+00},
	{1.3750016013241827376e-08, -5.0324985048599012486e-06, 3.0497284505951668954e-03, 1.8481354479287828152e+00},
	{1.3570572160920204842e-08, -4.9912492164744760715e-06, 3.0397046812025781300e-03, 1.8511801576308835049e+00},
	{1.3394332624583899629e-08, -4.9505382424236112288e-06, 3.0297628724557548567e-03, 1.8542148846334360890e+00},
	{1.3221224932869878124e-08, -4.9103559702311804679e-06, 3.0199019573299160438e-03, 1.8572397103619766590e+00},
	{1.3051178595110151147e-08, -4.8706930048200120062e-06, 3.0101208878080673234e-03, 1.8602547151845560958e+00},
	{1.2884125037950758549e-08, -4.8315401625703606760e-06, 3.0004186344521357153e-03, 1.8632599784305325930e+00},
	{1.2719997544291986378e-08, -4.7928884655684957672e-06, 2.9907941859858002895e-03, 1.8662555784089420730e+00},
	{1.2558731194454164777e-08, -4.7547291360384512750e-06, 2.9812465488886405983e-03, 1.8692415924264549343e+00},
	{1.2400262809477782113e-08, -4.7170535909502554617e-06, 2.9717747470012468268e-03, 1.8722180968049337846e+00},
	{1.2244530896470803293e-08, -4.6798534367982361641e-06, 2.9623778211409425472e-03, 1.8751851668986021515e+00},
	{1.2091475595920040759e-08, -4.6431204645432769509e-06, 2.9530548287277891793e-03, 1.8781428771108326092e+00},
	{1.1941038630887137403e-08, -4.6068466447131067591e-06, 2.9438048434205447285e-03, 1.8810913009105669769e+00},
	{1.1793163258013320501e-08, -4.5710241226549927791e-06, 2.9346269547622727894e-03, 1.8840305108483770269e+00},
	{1.1647794220260488829e-08, -4.5356452139354003336e-06, 2.9255202678352991083e-03, 1.8869605785721754732e+00},
	{1.1504877701319353254e-08, -4.5007023998814155779e-06, 2.9164839029252238346e-03, 1.8898815748425867866e+00},
	{1.1364361281618496068e-08, -4.4661883232589225169e-06, 2.9075169951937197138e-03, 1.8927935695479856104e+00},
	{1.1226193895871066437e-08, -4.4320957840827477554e-06, 2.8986186943598386649e-03, 1.8956966317192132099e+00},
	{1.1090325792098653334e-08, -4.3984177355541405582e-06, 2.8897881643895700042e-03, 1.8985908295439788418e+00},
	{1.0956708492074477981e-08, -4.3651472801211785665e-06, 2.8810245831934048512e-03, 1.9014762303809549238e+00},
	{1.0825294753130587262e-08, -4.3322776656578241959e-06, 2.8723271423316577844e-03, 1.9043529007735726655e+00},
	{1.0696038531276118494e-08, -4.2998022817575481694e-06, 2.8636950467273167634e-03, 1.9072209064635297082e+00},
	{1.0568894945575988912e-08, -4.2677146561375899533e-06, 2.8551275143861962365e-03, 1.9100803124040102166e+00},
	{1.0443820243741535462e-08, -4.2360084511500671636e-06, 2.8466237761241757268e-03, 1.9129311827726316331e+00},
	{1.0320771768886675226e-08, -4.2046774603963069488e-06, 2.8381830753013092238e-03, 1.9157735809841214270e+00},
	{1.0199707927405191711e-08, -4.1737156054408934796e-06, 2.8298046675626106587e-03, 1.9186075697027304976e+00},
	{1.0080588157926565402e-08, -4.1431169326220747536e-06, 2.8214878205853133677e-03, 1.9214332108543923372e+00},
	{9.9633729013095917148e-09, -4.1128756099552998249e-06, 2.8132318138324148918e-03, 1.9242505656386297286e+00},
	{9.8480235716347666156e-09, -4.0829859241267541322e-06, 2.8050359383123262685e-03, 1.9270596945402218569e+00},
	{9.7345025281579801754e-09, -4.0534422775739189918e-06, 2.7968994963444471398e-03, 1.9298606573406305031e+00},
	{9.6227730481897011607e-09, -4.0242391856502592493e-06, 2.7888218013304936355e-03, 1.9326535131291968650e+00},
	{9.5127993008652386277e-09, -3.9953712738712599762e-06, 2.7808021775314185724e-03, 1.9354383203141116709e+00},
	{9.4045463217731686610e-09, -3.9668332752391533743e-06, 2.7728399598497609040e-03, 1.9382151366331654696e+00},
	{9.2979799884102750173e-09, -3.9386200276437490487e-06, 2.7649344936172656935e-03, 1.9409840191642833140e+00},
	{9.1930669964327387890e-09, -3.9107264713368875385e-06, 2.7570851343876332309e-03, 1.9437450243358500579e+00},
	{9.0897748366744752218e-09, -3.8831476464781471052e-06, 2.7492912477342468063e-03, 1.9464982079368307044e+00},
	{8.9880717729047218438e-09, -3.8558786907494718984e-06, 2.7415522090527399274e-03, 1.9492436251266904712e+00},
	{8.8879268202981252348e-09, -3.8289148370365353060e-06, 2.7338674033682672411e-03, 1.9519813304451214542e+00},
	{8.7893097245916160036e-09, -3.8022514111746815204e-06, 2.7262362251473490522e-03, 1.9547113778215770008e+00},
	{8.6921909419034302675e-09, -3.7758838297573878765e-06, 2.7186580781141602044e-03, 1.9574338205846202321e+00},
	{8.5965416191905573979e-09, -3.7498075980052705639e-06, 2.7111323750711444937e-03, 1.9601487114710929305e+00},
	{8.5023335753219327443e-09, -3.7240183076937096774e-06, 2.7036585377238284145e-03, 1.9628561026351052377e+00},
	{8.4095392827454848253e-09, -3.6985116351372496165e-06, 2.6962359965097262501e-03, 1.9655560456568523797e+00},
	{8.3181318497280795408e-09, -3.6732833392289935209e-06, 2.6888641904312202829e-03, 1.9682485915512639707e+00},
	{8.2280850031482179016e-09, -3.6483292595332752325e-06, 2.6815425668923085697e-03, 1.9709337907764854503e+00},
	{8.1393730718220816212e-09, -3.6236453144299456334e-06, 2.6742705815391162004e-03, 1.9736116932422007597e+00},
	{8.0519709703443695975e-09, -3.5992274993086788202e-06, 2.6670476981040689909e-03, 1.9762823483177962558e+00},
	{7.9658541834259638865e-09, -3.5750718848117510094e-06, 2.6598733882536268296e-03, 1.9789458048403698598e+00},
	{7.8809987507112892937e-09, -3.5511746151238022430e-06, 2.6527471314394903724e-03, 1.9816021111225905482e+00},
	{7.7973812520587832662e-09, -3.5275319063071426318e-06, 2.6456684147531765727e-03, 1.9842513149604115164e+00},
	{7.7149787932685842914e-09, -3.5041400446812123088e-06, 2.6386367327838828115e-03, 1.9868934636406376804e+00},
	{7.6337689922421425796e-09, -3.4809953852448584748e-06, 2.6316515874795494249e-03, 1.9895286039483535134e+00},
	{7.5537299655590259052e-09, -3.4580943501401234111e-06, 2.6247124880110356271e-03, 1.9921567821742147686e+00},
	{7.4748403154567807819e-09, -3.4354334271563076377e-06, 2.6178189506393259936e-03, 1.9947780441216036440e+00},
	{7.3970791172001847757e-09, -3.4130091682730817147e-06, 2.6109704985856929151e-03, 1.9973924351136540523e+00},
	// An extra entry at the end, to handle x being exactly 8 or slightly above (exact at 8),
	// avoiding the need for a bounds check.
	{7.3585981204185952705e-09, -3.3908420138888887007e-06, 2.6041666666666665221e-03, 2.0000000000000000000e+00}
};

double cube_root_single(double x) {
	x *= (256/8);
	//(*(uint64_t*)&x) += (5ULL<<52);
	// NOTE: Casting to int64_t is faster than casting to size_t on x86
	int64_t index = int64_t(x);
	x -= index;

	// x should be in [0,1)
	// The first 32 indices of the array are omitted.
	const double*const coeffs = cube_root_coeffs[index-32];
	//return (((((coeffs[0]*x + coeffs[1])*x + coeffs[2])*x + coeffs[3])*x + coeffs[4])*x + coeffs[5]) + coeffs[6];
	return ((coeffs[0]*x + coeffs[1])*x + coeffs[2])*x + coeffs[3];
}

double cube_root(double x) {
	if (x == 0) {
		return x;
	}
	bool negate = (x < 0);
	double temp = negate ? -x : x;
	static_assert(sizeof(double) == sizeof(uint64_t), "The following code assumes that double and uint64_t are the same size, to deal with the exponent.");
	uint64_t exponent = (*(const uint64_t*)&temp) >> 52;
	if (exponent == 0) {
		// TODO: Support denormal numbers.
		return 0.0;
	}
	if (exponent == 2047) {
		// Infinity or NaN, so return the original infinity or NaN.
		return x;
	}

	// NOTE: 1023 (true exponent 0) is a multiple of 3, (1023=341*3), so we don't need to adjust it here.
	// This is equivalent to dividing by 3 for numbers [0,2047].
	//exponent = (exponent*683)>>11;
	exponent /= 3;
	(*(uint64_t*)&temp) -= ((exponent*3 - 1023) << 52);
	double out = cube_root_single(temp);

	// One Newton's method iteration, to improve the accuracy.
	double out2 = out*out;
	out += ((temp - out*out2)/(3*out2));

	(*(uint64_t*)&out) += ((exponent - 341) << 52);

	return negate ? -out : out;
}
